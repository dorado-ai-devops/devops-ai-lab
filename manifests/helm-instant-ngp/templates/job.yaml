apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}
spec:
  template:
    spec:
      runtimeClassName: nvidia
      restartPolicy: Never

      initContainers:
        - name: clone-dataset
          image: alpine/git
          env:
            - name: GH_KEY
              valueFrom:
                secretKeyRef:
                  name: github-ssh-secret
                  key: GH_SECRET
          command:
            - sh
            - -c
            - |
              set -e
              echo "Clonando dataset desde GitHub..."
              mkdir -p /root/.ssh
              echo "$GH_KEY" > /root/.ssh/id_rsa
              chmod 600 /root/.ssh/id_rsa
              ssh-keyscan github.com >> /root/.ssh/known_hosts

              if [ -d /data/tmp_cloned ]; then
                echo "/data/tmp_cloned ya existe. Borrando..."
                rm -rf /data/tmp_cloned
              fi

              git clone git@github.com:dorado-ai-devops/ai-nerf-datasets.git /data/tmp_cloned

              echo "Copiando im√°genes y transforms.json..."
              mkdir -p /data/{{ .Values.datasetName }}
              cp -r /data/tmp_cloned/{{ .Values.datasetName }}/* /data/{{ .Values.datasetName }}

              echo "Dataset copiado correctamente"

          volumeMounts:
            - name: nerf-data
              mountPath: /data

      containers:
        - name: nerf-trainer
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: nerf-data
              mountPath: /data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: DATA_PATH
              value: "/data/{{ .Values.datasetName }}"

      volumes:
        - name: nerf-data
          persistentVolumeClaim:
            claimName: {{ .Values.volume.pvcName }}

      tolerations:
        - key: "gpu"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
